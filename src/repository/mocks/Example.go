// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	repository "github.com/dalikewara/ayapingping-go/v2/src/repository"
	mock "github.com/stretchr/testify/mock"
)

// Example is an autogenerated mock type for the Example type
type Example struct {
	mock.Mock
}

// FindAll provides a mock function with given fields: param
func (_m *Example) FindAll(param repository.ExampleFindAllParam) repository.ExampleFindAllResult {
	ret := _m.Called(param)

	var r0 repository.ExampleFindAllResult
	if rf, ok := ret.Get(0).(func(repository.ExampleFindAllParam) repository.ExampleFindAllResult); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Get(0).(repository.ExampleFindAllResult)
	}

	return r0
}

type mockConstructorTestingTNewExample interface {
	mock.TestingT
	Cleanup(func())
}

// NewExample creates a new instance of Example. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExample(t mockConstructorTestingTNewExample) *Example {
	mock := &Example{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
