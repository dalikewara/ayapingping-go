// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	user "github.com/dalikewara/ayapingping-go/src/domains/user"
	mock "github.com/stretchr/testify/mock"
)

// ServiceInterface is an autogenerated mock type for the ServiceInterface type
type ServiceInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: param
func (_m *ServiceInterface) Create(param user.ServiceCreateParam) user.ServiceCreateResult {
	ret := _m.Called(param)

	var r0 user.ServiceCreateResult
	if rf, ok := ret.Get(0).(func(user.ServiceCreateParam) user.ServiceCreateResult); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Get(0).(user.ServiceCreateResult)
	}

	return r0
}

// GetAll provides a mock function with given fields: param
func (_m *ServiceInterface) GetAll(param user.ServiceGetAllParam) user.ServiceGetAllResult {
	ret := _m.Called(param)

	var r0 user.ServiceGetAllResult
	if rf, ok := ret.Get(0).(func(user.ServiceGetAllParam) user.ServiceGetAllResult); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Get(0).(user.ServiceGetAllResult)
	}

	return r0
}

// GetByUsername provides a mock function with given fields: param
func (_m *ServiceInterface) GetByUsername(param user.ServiceGetByUsernameParam) user.ServiceGetByUsernameResult {
	ret := _m.Called(param)

	var r0 user.ServiceGetByUsernameResult
	if rf, ok := ret.Get(0).(func(user.ServiceGetByUsernameParam) user.ServiceGetByUsernameResult); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Get(0).(user.ServiceGetByUsernameResult)
	}

	return r0
}
