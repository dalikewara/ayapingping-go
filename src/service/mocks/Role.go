// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	service "github.com/dalikewara/ayapingping-go/v2/src/service"
	mock "github.com/stretchr/testify/mock"
)

// Role is an autogenerated mock type for the Role type
type Role struct {
	mock.Mock
}

// GetByUserID provides a mock function with given fields: param
func (_m *Role) GetByUserID(param service.RoleGetByUserIDParam) service.RoleGetByUserIDResult {
	ret := _m.Called(param)

	var r0 service.RoleGetByUserIDResult
	if rf, ok := ret.Get(0).(func(service.RoleGetByUserIDParam) service.RoleGetByUserIDResult); ok {
		r0 = rf(param)
	} else {
		r0 = ret.Get(0).(service.RoleGetByUserIDResult)
	}

	return r0
}

type mockConstructorTestingTNewRole interface {
	mock.TestingT
	Cleanup(func())
}

// NewRole creates a new instance of Role. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRole(t mockConstructorTestingTNewRole) *Role {
	mock := &Role{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
