// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	user_example "github.com/dalikewara/ayapingping-go/domain/user_example"
	mock "github.com/stretchr/testify/mock"
)

// UseCase is an autogenerated mock type for the UseCase type
type UseCase struct {
	mock.Mock
}

// Login provides a mock function with given fields: request
func (_m *UseCase) Login(request user_example.UseCaseLoginRequest) user_example.UseCaseLoginResponse {
	ret := _m.Called(request)

	var r0 user_example.UseCaseLoginResponse
	if rf, ok := ret.Get(0).(func(user_example.UseCaseLoginRequest) user_example.UseCaseLoginResponse); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(user_example.UseCaseLoginResponse)
	}

	return r0
}

// LoginContext provides a mock function with given fields: request
func (_m *UseCase) LoginContext(request user_example.UseCaseLoginContextRequest) user_example.UseCaseLoginContextResponse {
	ret := _m.Called(request)

	var r0 user_example.UseCaseLoginContextResponse
	if rf, ok := ret.Get(0).(func(user_example.UseCaseLoginContextRequest) user_example.UseCaseLoginContextResponse); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(user_example.UseCaseLoginContextResponse)
	}

	return r0
}
